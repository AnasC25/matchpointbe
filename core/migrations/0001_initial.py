# Generated by Django 5.2.1 on 2025-05-18 19:01

import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(db_index=True, max_length=255, unique=True)),
                ('adresse', models.CharField(max_length=255)),
                ('ville', models.CharField(db_index=True, max_length=255)),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='clubs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Club',
                'verbose_name_plural': 'Clubs',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Discipline',
                'verbose_name_plural': 'Disciplines',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format : 0612345678, 0712345678, 212612345678 ou 212712345678', regex='^(?:(?:\\+|00)212|0)[67]\\d{8}$')])),
                ('niveau', models.CharField(blank=True, max_length=50, null=True)),
                ('societe', models.CharField(blank=True, max_length=100, null=True)),
                ('is_club_agent', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='+', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='+', to='auth.permission')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to='core.club')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='club',
            name='disciplines',
            field=models.ManyToManyField(related_name='clubs', to='core.discipline'),
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sku', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('available', models.BooleanField(default=True)),
                ('brand', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('prix_barre', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('stock', models.IntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='equipments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('vendeur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmée'), ('shipped', 'Expédiée'), ('delivered', 'Livrée'), ('cancelled', 'Annulée')], default='pending', max_length=20)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('shipping_address', models.TextField()),
                ('shipping_city', models.CharField(max_length=100)),
                ('shipping_postal_code', models.CharField(max_length=100)),
                ('shipping_country', models.CharField(max_length=100)),
                ('shipping_phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format marocain valide', regex='^(?:(?:\\+|00)212|0)[6-7]\\d{8}$')])),
                ('shipping_email', models.EmailField(max_length=254)),
                ('payment_status', models.CharField(default='pending', max_length=100)),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_method', models.CharField(choices=[('card', 'Carte bancaire'), ('cash', 'Espèces'), ('transfer', 'Virement')], default='card', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='Terrain',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('localisation', models.CharField(max_length=255)),
                ('prix_par_heure', models.DecimalField(decimal_places=2, max_digits=6)),
                ('caracteristiques', models.JSONField(blank=True, default=list, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='terrains/')),
                ('disponible', models.BooleanField(default=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terrains', to='core.club')),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terrains', to='core.discipline')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmée'), ('cancelled', 'Annulée')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('terrain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.terrain')),
            ],
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['ville', 'is_active'], name='core_club_ville_a4a8c7_idx'),
        ),
    ]
